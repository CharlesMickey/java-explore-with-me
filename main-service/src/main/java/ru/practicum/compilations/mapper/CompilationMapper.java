package ru.practicum.compilations.mapper;

import java.util.List;
import javax.annotation.processing.Generated;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import ru.practicum.compilations.dto.CompilationDto;
import ru.practicum.compilations.dto.NewCompilationDto;
import ru.practicum.compilations.model.Compilation;
import ru.practicum.events.model.Event;

@Mapper(componentModel = "spring")
@Generated("AutoGeneratedByMapStruct")
public interface CompilationMapper {
    CompilationMapper INSTANCE = Mappers.getMapper(CompilationMapper.class);

    CompilationDto compilatonsToCompilationsDto(Compilation compilation);

    List<CompilationDto> compilatonsToCompilationsDto(List<Compilation> compilation);

    @Mapping(source = "events", target = "events")
    Compilation compilationToNewCompilationDto(NewCompilationDto newCompilationDto, List<Event> events);

    Compilation compilationDtoToCompilation(CompilationDto compilationDto);

}
